/*
    class Node 
    	int data;
    	Node left;
    	Node right;
	*/
	public static Node lca(Node root, int v1, int v2) {
        if(root==null){
            return root;
        }

        // If any node matches to the number v1 or v2 then return that node
        if(root.data==v1 || root.data==v2){
              return root;
        }

        // Find lca of left subtree and right subtree
        Node left_lca = lca(root.left, v1, v2);
        Node right_lca= lca(root.right, v1, v2);
        
        // if left subtree lca and right subtree lca both are not null then return that 
        // node 
        if(left_lca!=null && right_lca!=null){
            return root;
        }
        
        // If any one left subtree lca is not null then return the same
        return (left_lca!=null) ? left_lca : right_lca;
    }
